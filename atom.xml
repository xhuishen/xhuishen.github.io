<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一点儿都不慌</title>
  
  <subtitle>、、、</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//xhui.top/"/>
  <updated>2024-05-23T11:49:32.324Z</updated>
  <id>//xhui.top/</id>
  
  <author>
    <name>xhui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>继承</title>
    <link href="//xhui.top/2020/02/10/%E7%BB%A7%E6%89%BF/"/>
    <id>//xhui.top/2020/02/10/继承/</id>
    <published>2020-02-10T03:30:34.000Z</published>
    <updated>2024-05-23T11:49:32.324Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;原型链继承&quot;&gt;&lt;a href=&quot;#原型链继承&quot; class=&quot;headerlink&quot; title=&quot;原型链继承&quot;&gt;&lt;/a&gt;原型链继承&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Parent&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&#39;原型链继承&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Parent.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Child&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Child.prototype = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Parent()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; child = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Child();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;child.getName()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;缺点&lt;br&gt;1 引用类型的属性会被所有的实例共享&lt;br&gt;2 在创建Child实例时,不能向Parent传参&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="js基础" scheme="//xhui.top/tags/js%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>初探NUXT(ssr)</title>
    <link href="//xhui.top/2019/11/21/%E5%88%9D%E6%8E%A2NUXT(ssr)/"/>
    <id>//xhui.top/2019/11/21/初探NUXT(ssr)/</id>
    <published>2019-11-20T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.324Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;项目需要 seo 及兼容手机端,百度大法后选定了 nuxt,记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h3&gt;
    
    </summary>
    
    
      <category term="js" scheme="//xhui.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>小程序&amp;&amp;Taro记录</title>
    <link href="//xhui.top/2019/11/15/%E5%B0%8F%E7%A8%8B%E5%BA%8F&amp;&amp;Taro%E8%AE%B0%E5%BD%95/"/>
    <id>//xhui.top/2019/11/15/小程序&amp;&amp;Taro记录/</id>
    <published>2019-11-14T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.324Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Taro 扫码进入页面传递多个参数会被截断&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// url: &#39;/index?scene=id=1&amp;amp;aa=2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实测android不会自动转码 = 号后面会被截断 ios不会&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console&lt;span class=&quot;selector-class&quot;&gt;.log&lt;/span&gt; (  this.&lt;span class=&quot;variable&quot;&gt;$router&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.params&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.scene&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// android   id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ios    id=1&amp;amp;aa=2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="js" scheme="//xhui.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>VUE2+IVIEW 兼容ie9配置记录</title>
    <link href="//xhui.top/2019/07/24/VUE2+IVIEW%20%E5%85%BC%E5%AE%B9ie9%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <id>//xhui.top/2019/07/24/VUE2+IVIEW 兼容ie9配置记录/</id>
    <published>2019-07-23T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.323Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;js 兼容 man.js 导入即可&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="//xhui.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>随机生成验证码 兼容ie</title>
    <link href="//xhui.top/2019/07/24/%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>//xhui.top/2019/07/24/随机生成验证码/</id>
    <published>2019-07-23T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.325Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;随机生成验证码&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="//xhui.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js基础整理</title>
    <link href="//xhui.top/2019/06/20/js%E5%9F%BA%E7%A1%80%E6%95%B4%E7%90%86/"/>
    <id>//xhui.top/2019/06/20/js基础整理/</id>
    <published>2019-06-19T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.324Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-概念类&quot;&gt;&lt;a href=&quot;#1-概念类&quot; class=&quot;headerlink&quot; title=&quot;1 概念类&quot;&gt;&lt;/a&gt;1 概念类&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;基本数据类型：&lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; Null &lt;span class=&quot;built_in&quot;&gt;Boolean&lt;/span&gt; Undefind &lt;span class=&quot;built_in&quot;&gt;Symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;引用数据类型：&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="js" scheme="//xhui.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Http请求与响应</title>
    <link href="//xhui.top/2019/05/14/Http%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94/"/>
    <id>//xhui.top/2019/05/14/Http请求与响应/</id>
    <published>2019-05-13T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.321Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;HTTP-的请求报文包括四个部分&quot;&gt;&lt;a href=&quot;#HTTP-的请求报文包括四个部分&quot; class=&quot;headerlink&quot; title=&quot;HTTP 的请求报文包括四个部分&quot;&gt;&lt;/a&gt;HTTP 的请求报文包括四个部分&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;请求行&lt;br&gt;请求方法，请求 URL，HTTP 协议版本&lt;/p&gt;
    
    </summary>
    
    
      <category term="http" scheme="//xhui.top/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>CSS常用系列整理</title>
    <link href="//xhui.top/2019/03/10/CSS%E5%B8%B8%E7%94%A8%E7%B3%BB%E5%88%97%E6%95%B4%E7%90%86/"/>
    <id>//xhui.top/2019/03/10/CSS常用系列整理/</id>
    <published>2019-03-09T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.321Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;ios 滑动不流畅&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-webkit-&lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;-scrolling: touch;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="//xhui.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---10.适配器模式</title>
    <link href="//xhui.top/2019/01/04/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-10-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>//xhui.top/2019/01/04/JS设计模式-10-适配器模式/</id>
    <published>2019-01-03T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.322Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;适配器模式的作用&quot;&gt;&lt;a href=&quot;#适配器模式的作用&quot; class=&quot;headerlink&quot; title=&quot;适配器模式的作用&quot;&gt;&lt;/a&gt;适配器模式的作用&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;适配器模式可用来在现有接口和不兼容的类之间进行适配，使用这种模式的对象又叫包装器。（个人理解其实就是用来做兼容的一种模式）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---9.门面模式</title>
    <link href="//xhui.top/2018/12/21/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-9-%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F/"/>
    <id>//xhui.top/2018/12/21/JS设计模式-9-门面模式/</id>
    <published>2018-12-20T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.323Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;门面模式是什么&quot;&gt;&lt;a href=&quot;#门面模式是什么&quot; class=&quot;headerlink&quot; title=&quot;门面模式是什么&quot;&gt;&lt;/a&gt;门面模式是什么&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;外部与一个子系统的通信必须通过一个系统的一个门面对象进行，这就是门面模式。 它有两个作用，一是简化类的接口，二是消除类与使用它的客户代码的耦合&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---8.组合模式</title>
    <link href="//xhui.top/2018/12/20/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-8-%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/"/>
    <id>//xhui.top/2018/12/20/JS设计模式-8-组合模式/</id>
    <published>2018-12-19T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.323Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;组合模式是什么&quot;&gt;&lt;a href=&quot;#组合模式是什么&quot; class=&quot;headerlink&quot; title=&quot;组合模式是什么&quot;&gt;&lt;/a&gt;组合模式是什么&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;组合模式又叫整体模式。它把一批子对象组织为树形结构，只要一条命令就可以操作树中的所有对象&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---7.桥接模式</title>
    <link href="//xhui.top/2018/12/19/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-7-%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>//xhui.top/2018/12/19/JS设计模式-7-桥接模式/</id>
    <published>2018-12-18T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.323Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;适用场合及栗子&quot;&gt;&lt;a href=&quot;#适用场合及栗子&quot; class=&quot;headerlink&quot; title=&quot;适用场合及栗子&quot;&gt;&lt;/a&gt;适用场合及栗子&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;事件监听器&lt;blockquote&gt;
&lt;p&gt;假设有一个名为 getBeerById 的 API 函数。它根据一个标识符返回有关某种啤酒的信息。我们来给一个事件监听用户操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---6.工厂模式</title>
    <link href="//xhui.top/2018/12/18/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-6-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>//xhui.top/2018/12/18/JS设计模式-6-工厂模式/</id>
    <published>2018-12-17T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.323Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;适用场合&quot;&gt;&lt;a href=&quot;#适用场合&quot; class=&quot;headerlink&quot; title=&quot;适用场合&quot;&gt;&lt;/a&gt;适用场合&lt;/h3&gt;&lt;h5 id=&quot;动态实现&quot;&gt;&lt;a href=&quot;#动态实现&quot; class=&quot;headerlink&quot; title=&quot;动态实现&quot;&gt;&lt;/a&gt;动态实现&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;与一系列实现了同一接口、可以被同等对待的类打交道时，需要使用工厂模式&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---5.单体模式</title>
    <link href="//xhui.top/2018/12/12/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-5-%E5%8D%95%E4%BD%93%E6%A8%A1%E5%BC%8F/"/>
    <id>//xhui.top/2018/12/12/JS设计模式-5-单体模式/</id>
    <published>2018-12-11T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.323Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;何为单体模式&quot;&gt;&lt;a href=&quot;#何为单体模式&quot; class=&quot;headerlink&quot; title=&quot;何为单体模式&quot;&gt;&lt;/a&gt;何为单体模式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;单体是一个用来划分命名空间并将相关一批方法和属性组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---4.继承</title>
    <link href="//xhui.top/2018/12/11/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-4-%E7%BB%A7%E6%89%BF/"/>
    <id>//xhui.top/2018/12/11/JS设计模式-4-继承/</id>
    <published>2018-12-10T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.322Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;场景： 我们需要目前有一个超类 Person，现在需要一个 Author 类来继承超类的所有方法及属性，并且拥有自己的方法和属性&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---3.封装</title>
    <link href="//xhui.top/2018/12/10/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-3-%E5%B0%81%E8%A3%85/"/>
    <id>//xhui.top/2018/12/10/JS设计模式-3-封装/</id>
    <published>2018-12-09T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.322Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;封装之利&quot;&gt;&lt;a href=&quot;#封装之利&quot; class=&quot;headerlink&quot; title=&quot;封装之利&quot;&gt;&lt;/a&gt;封装之利&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;保证内部数据完整，易于重构&lt;/li&gt;
&lt;li&gt;弱化模块间耦合，提高对象可重用性&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS设计模式---2.接口</title>
    <link href="//xhui.top/2018/12/08/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-2-%E6%8E%A5%E5%8F%A3/"/>
    <id>//xhui.top/2018/12/08/JS设计模式-2-接口/</id>
    <published>2018-12-07T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.322Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是接口&quot;&gt;&lt;a href=&quot;#什么是接口&quot; class=&quot;headerlink&quot; title=&quot;什么是接口&quot;&gt;&lt;/a&gt;什么是接口&lt;/h3&gt;&lt;p&gt;接口提供了一种用以说明一个对象应该具有哪些方法的手段。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式---1.富有表现力的JS</title>
    <link href="//xhui.top/2018/12/07/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-1-%E5%AF%8C%E6%9C%89%E8%A1%A8%E7%8E%B0%E5%8A%9B%E7%9A%84JS/"/>
    <id>//xhui.top/2018/12/07/JS设计模式-1-富有表现力的JS/</id>
    <published>2018-12-06T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.321Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言: 最近准备把 js 设计模式这本书看一遍，然后也就是把书上的例子什么的挑挑拣拣做个记录。刚开始一些设计模式可能理解的不够深入，有些地方写的不是很到位，以后有更深的理解再回来补充。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JS设计模式" scheme="//xhui.top/tags/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo和github pages搭建个人博客</title>
    <link href="//xhui.top/2018/11/06/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>//xhui.top/2018/11/06/使用hexo和github-pages搭建个人博客/</id>
    <published>2018-11-05T16:00:00.000Z</published>
    <updated>2024-05-23T11:49:32.324Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;服务器到期了，域名空着也没用，于是趁着空闲搭建一个基于 git 的博客&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="//xhui.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
